// Generated by CoffeeScript 1.9.1
(function() {
  var Service, events, exports,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  events = require('events');

  exports = module.exports = Service = (function(superClass) {
    extend(Service, superClass);

    function Service() {
      return Service.__super__.constructor.apply(this, arguments);
    }

    Service.prototype.init = function() {
      return console.log('please implement');
    };

    Service.prototype.run = function() {
      return console.log('please implement');
    };

    return Service;

  })(events.EventEmitter);

}).call(this);
